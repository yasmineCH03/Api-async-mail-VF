name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:5.0
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_DATABASE: email_api
      
      rabbitmq:
        image: rabbitmq:3.8-management
        ports:
          - 5672:5672
        env:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mongodb, amqp, pdo, pdo_mysql
        coverage: xdebug

    - name: Get Composer Cache Directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache Composer dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Install dependencies
      run: |
        cd skeleton
        composer install --prefer-dist --no-progress --no-suggest

    - name: Create .env file
      run: |
        cd skeleton
        cp .env .env.test
        echo "MONGODB_URL=mongodb://localhost:27017" >> .env.test
        echo "MESSENGER_TRANSPORT_DSN=amqp://guest:guest@localhost:5672/%2f/emails" >> .env.test
        echo "MAILER_DSN=smtp://localhost:1025" >> .env.test

    - name: Run PHP CS Fixer
      run: |
        cd skeleton
        vendor/bin/php-cs-fixer fix --dry-run --diff

    - name: Run PHPStan
      run: |
        cd skeleton
        vendor/bin/phpstan analyse src/ --level=5

    - name: Run tests
      run: |
        cd skeleton
        php bin/phpunit --coverage-clover=coverage.xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./skeleton/coverage.xml
        flags: unittests
        name: codecov-umbrella

  docker:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker images
      run: |
        docker-compose build

    - name: Test Docker setup
      run: |
        docker-compose up -d
        sleep 30
        curl -f http://localhost:8000/emails || exit 1
        docker-compose down

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  deploy:
    runs-on: ubuntu-latest
    needs: [test, docker, security]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4

    - name: Deploy to production
      run: |
        echo "Deployment to production would happen here"
        # Add your deployment commands here
